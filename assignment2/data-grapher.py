import matplotlib.pyplot as plt
from pylab import *

plt.clf()

# xs and ys must have the same dimension!!

### CUTOFF ###
xs = range(1,101)

### TIME TO COMPUTE ###
# dimension 500
l = [2081581, 562579, 558435, 252195, 252327, 272550, 313386, 182976, 162873, 160082, 161043, 159957, 160009, 159114, 159928, 133615, 147662, 141719, 193001, 137793, 135698, 167473, 174569, 153593, 136508, 191497, 130104, 169429, 168246, 172833, 147840, 158811, 158262, 156156, 161466, 140122, 123578, 123941, 153092, 126882, 123466, 123013, 124900, 125163, 127479, 144681, 125087, 126242, 159372, 174341, 138584, 128606, 130136, 129344, 128867, 126897, 128698, 125981, 122251, 122104, 126521, 126158, 123177, 127894, 132250, 130225, 132464, 142427, 127898, 132449, 132495, 126193, 138421, 126129, 131413, 130112, 128541, 127740, 132046, 126902, 128985, 127914, 125423, 127241, 128995, 130882, 129315, 129790, 129023, 126413, 129446, 132586, 128862, 135847, 126205, 128154, 135887, 127114, 127189, 139067]
m = [2105804, 588517, 598592, 258156, 255177, 258518, 253452, 161129, 166869, 160732, 160034, 160455, 160413, 169032, 184615, 192830, 140367, 138521, 136454, 131665, 132282, 131593, 136334, 142331, 131258, 129880, 130366, 128195, 132922, 128972, 129595, 123675, 123594, 122051, 153556, 122547, 130981, 135547, 123658, 122724, 143932, 171210, 134610, 154760, 146530, 132239, 165579, 131700, 124302, 124167, 125070, 126453, 123292, 126867, 123279, 125129, 142092, 139273, 123493, 123530, 134038, 122410, 130541, 125591, 136202, 141193, 132293, 130974, 128638, 140718, 128392, 127528, 133325, 127866, 125836, 126194, 148193, 143469, 126767, 127461, 126751, 133290, 129317, 125582, 129334, 127536, 133877, 126491, 163536, 126354, 140235, 137576, 126186, 127657, 133498, 125738, 126750, 129482, 125477, 155871]
n = [2265343, 618147, 631989, 255689, 256797, 254882, 252369, 164267, 163367, 172691, 162263, 165216, 163742, 164448, 172256, 166017, 139345, 128654, 135802, 137291, 158302, 153428, 163615, 176478, 175608, 187812, 177802, 174284, 161736, 130066, 131337, 123111, 123120, 124060, 128188, 171130, 129059, 126258, 158493, 137281, 126522, 132054, 164310, 156491, 126282, 125620, 123101, 123220, 123097, 122637, 124067, 129691, 122022, 133714, 128052, 137788, 128607, 125901, 128502, 123600, 122711, 124299, 122694, 126395, 126454, 131162, 127010, 133679, 126334, 127070, 139563, 126308, 127969, 127097, 125532, 140423, 138175, 125127, 126840, 130977, 127629, 125859, 133604, 130779, 125771, 129481, 131914, 132342, 131619, 130442, 133227, 130680, 127605, 125886, 134404, 133365, 126567, 127233, 163433, 127695]
ys = [(a+b+c)/3 for a,b,c in zip(l,m,n)]

# dimension 1000
#l = []
#m = []
#n = []
#ys = [(a+b+c)/3 for a,b,c in zip(l,m,n)]

# dimension 2500
#l = []
#m = []
#n = []
#ys = [(a+b+c)/3 for a,b,c in zip(l,m,n)]

p1, = plt.plot(xs, ys, color='b')

plt.grid(b=1)

plt.title('Cutoff vs. Time to Compute AB = C, n = 500') # note that this is for 012 matrices
#plt.title('Cutoff vs. Time to Compute AB = C, n = 1000') # note that this is for 012 matrices
#plt.title('Cutoff vs. Time to Compute AB = C, n = 2500') # note that this is for 012 matrices
plt.xlabel('Cutoff')
plt.ylabel('Compute Time (us)')
#plt.axis([0,200,0.04,0.07])
plt.axis([0,100,110000,500000])
#plt.axis([0,200,0.16,0.5])
#plt.axis([0,200,1.1,1.6])
#plt.figlegend((p1,p2,p3), ('n = 500','n = 1000','n = 2500'), 'right')

# save figure as a pdf
savefig('cutoff-v-compute-time-500.pdf')
#savefig('cutoff-v-compute-time-1000.pdf')
#savefig('cutoff-v-compute-time-2500.pdf')